package co.edu.proca3si.ejb.persistence.entities;
// Generated May 5, 2016 8:50:01 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario")
public class Usuario implements java.io.Serializable {

	private long usuCodigo;
	private UserMembership userMembership;
	private String usuUsuario;
	private String usuNombre;
	private String usuApellido;
	private String usuDireccion;
	private Date usuFechaNacimiento;
	private boolean usuEstado;
	private Set<UsuarioRol> usuarioRols = new HashSet<UsuarioRol>(0);
	private Set<UsuarioGrupo> usuarioGrupos = new HashSet<UsuarioGrupo>(0);

	public Usuario() {
	}

	public Usuario(long usuCodigo, UserMembership userMembership, String usuUsuario, String usuNombre, String usuDireccion, boolean usuEstado) {
		this.usuCodigo = usuCodigo;
		this.userMembership = userMembership;
		this.usuUsuario = usuUsuario;
		this.usuNombre = usuNombre;
		this.usuDireccion = usuDireccion;
		this.usuEstado = usuEstado;
	}

	public Usuario(long usuCodigo, UserMembership userMembership, String usuUsuario, String usuNombre, String usuApellido, String usuDireccion, Date usuFechaNacimiento,
			boolean usuEstado, Set<UsuarioRol> usuarioRols, Set<UsuarioGrupo> usuarioGrupos) {
		this.usuCodigo = usuCodigo;
		this.userMembership = userMembership;
		this.usuUsuario = usuUsuario;
		this.usuNombre = usuNombre;
		this.usuApellido = usuApellido;
		this.usuDireccion = usuDireccion;
		this.usuFechaNacimiento = usuFechaNacimiento;
		this.usuEstado = usuEstado;
		this.usuarioRols = usuarioRols;
		this.usuarioGrupos = usuarioGrupos;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "usu_codigo", unique = true, nullable = false)
	public long getUsuCodigo() {
		return this.usuCodigo;
	}

	public void setUsuCodigo(long usuCodigo) {
		this.usuCodigo = usuCodigo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ump_codigo", nullable = false)
	public UserMembership getUserMembership() {
		return this.userMembership;
	}

	public void setUserMembership(UserMembership userMembership) {
		this.userMembership = userMembership;
	}

	@Column(name = "usu_usuario", nullable = false, length = 40)
	public String getUsuUsuario() {
		return this.usuUsuario;
	}

	public void setUsuUsuario(String usuUsuario) {
		this.usuUsuario = usuUsuario;
	}

	@Column(name = "usu_nombre", nullable = false, length = 40)
	public String getUsuNombre() {
		return this.usuNombre;
	}

	public void setUsuNombre(String usuNombre) {
		this.usuNombre = usuNombre;
	}

	@Column(name = "usu_apellido", length = 40)
	public String getUsuApellido() {
		return this.usuApellido;
	}

	public void setUsuApellido(String usuApellido) {
		this.usuApellido = usuApellido;
	}

	@Column(name = "usu_direccion", nullable = false, length = 280)
	public String getUsuDireccion() {
		return this.usuDireccion;
	}

	public void setUsuDireccion(String usuDireccion) {
		this.usuDireccion = usuDireccion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "usu_fecha_nacimiento", length = 13)
	public Date getUsuFechaNacimiento() {
		return this.usuFechaNacimiento;
	}

	public void setUsuFechaNacimiento(Date usuFechaNacimiento) {
		this.usuFechaNacimiento = usuFechaNacimiento;
	}

	@Column(name = "usu_estado", nullable = false)
	public boolean isUsuEstado() {
		return this.usuEstado;
	}

	public void setUsuEstado(boolean usuEstado) {
		this.usuEstado = usuEstado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<UsuarioRol> getUsuarioRols() {
		return this.usuarioRols;
	}

	public void setUsuarioRols(Set<UsuarioRol> usuarioRols) {
		this.usuarioRols = usuarioRols;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<UsuarioGrupo> getUsuarioGrupos() {
		return this.usuarioGrupos;
	}

	public void setUsuarioGrupos(Set<UsuarioGrupo> usuarioGrupos) {
		this.usuarioGrupos = usuarioGrupos;
	}

}
